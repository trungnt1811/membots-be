definitions:
  dto.AffCampaignDto:
    properties:
      accesstrade_id:
        type: string
      active_status:
        type: integer
      approval:
        type: string
      brand_id:
        type: integer
      category:
        type: string
      category_id:
        type: integer
      cookie_duration:
        type: integer
      cookie_policy:
        type: string
      created_at:
        type: string
      description:
        $ref: '#/definitions/dto.CampaignDescriptionDto'
      end_time:
        type: string
      id:
        type: integer
      logo:
        type: string
      max_com:
        type: string
      merchant:
        type: string
      name:
        type: string
      scope:
        type: string
      start_time:
        type: string
      status:
        type: integer
      stella_description: {}
      stella_status:
        type: string
      sub_category:
        type: string
      thumbnail:
        type: string
      type:
        type: integer
      updated_at:
        type: string
      url:
        type: string
    type: object
  dto.AffCampaignDtoResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/dto.AffCampaignDto'
        type: array
      next_page:
        type: integer
      page:
        type: integer
      size:
        type: integer
      total:
        type: integer
    type: object
  dto.CampaignDescriptionDto:
    properties:
      action_point:
        type: string
      campaign_id:
        type: integer
      commission_policy:
        type: string
      cookie_policy:
        type: string
      created_at:
        type: string
      id:
        type: integer
      introduction:
        type: string
      other_notice:
        type: string
      rejected_reason:
        type: string
      traffic_building_policy:
        type: string
      updated_at:
        type: string
    type: object
  dto.CreateLinkPayload:
    properties:
      campaign_id:
        type: integer
      original_url:
        type: string
      shorten_link:
        type: boolean
    type: object
  dto.CreateLinkResponse:
    properties:
      aff_link:
        type: string
      campaign_id:
        type: integer
      original_url:
        type: string
      short_link:
        type: string
    type: object
  types.RedeemRequestPayload:
    properties:
      redeemCode:
        description: a unique text to redeem reward
        type: string
      walletAddress:
        description: valid wallet address to send reward to
        type: string
    required:
    - redeemCode
    - walletAddress
    type: object
  types.RedeemRewardResponse:
    properties:
      deadline:
        type: integer
      holderAddress:
        type: string
      signature:
        type: string
      walletAddress:
        type: string
    type: object
  util.GeneralError:
    properties:
      code:
        description: HTTP error code, or custom error code
        type: integer
      errors:
        description: List of error send server 2 server
        items:
          type: string
        type: array
      string:
        description: Friendly error message
        type: string
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This Swagger docs for Astra Affiliate System.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Affiliate System API
  version: "1.0"
paths:
  /api/v1/console/aff-campaign:
    get:
      description: Get list aff campaign
      parameters:
      - description: by to query, default is all
        in: query
        name: stella_status
        type: string
      - description: order to query, default is desc
        in: query
        name: order
        type: string
      - description: page to query, default is 1
        in: query
        name: page
        type: string
      - description: size to query, default is 10
        in: query
        name: size
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.AffCampaignDtoResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.GeneralError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/util.GeneralError'
      summary: Get list aff campaign
      tags:
      - console
  /api/v1/redeem/request:
    post:
      consumes:
      - application/json
      description: Send cashback to customer wallet by redeem code
      parameters:
      - description: Redeem payload, required
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/types.RedeemRequestPayload'
      produces:
      - application/json
      responses:
        "200":
          description: when redeem code is available, only valid if not claimed yet
          schema:
            $ref: '#/definitions/types.RedeemRewardResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.GeneralError'
        "424":
          description: Failed Dependency
          schema:
            $ref: '#/definitions/util.GeneralError'
      summary: PostRequestRedeem
      tags:
      - redeem
  /api/v1/users/{uid}:
    get:
      description: Get a user detail by uid
      parameters:
      - description: User uid to query
        in: path
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: GetUserDetail
      tags:
      - user
securityDefinitions:
  ApiKeyAuth:
    description: Use for authorization of reward creator
    in: header
    name: Authorization
    type: apiKey
  BasicKeyAuth:
    description: Use for authorization during server to server calls
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
