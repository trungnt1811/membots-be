definitions:
  dto.LaunchpadInfo:
    properties:
      collectedETH:
        type: string
      status:
        type: string
      targetETH:
        type: string
      transactions:
        items:
          $ref: '#/definitions/dto.Transaction'
        type: array
    type: object
  dto.LaunchpadInfoResp:
    properties:
      launchpadInfo:
        $ref: '#/definitions/dto.LaunchpadInfo'
    type: object
  dto.MemeCommon:
    properties:
      bannerUrl:
        type: string
      contract_address:
        type: string
      description:
        type: string
      logoUrl:
        type: string
      meta:
        type: string
      name:
        type: string
      symbol:
        type: string
    type: object
  dto.MemeDetail:
    properties:
      bannerUrl:
        type: string
      contractAddress:
        type: string
      creatorAddress:
        type: string
      decimals:
        type: integer
      description:
        type: string
      id:
        type: integer
      live:
        type: boolean
      logoUrl:
        type: string
      memeception:
        $ref: '#/definitions/dto.Memeception'
      meta:
        type: string
      name:
        type: string
      networkId:
        type: integer
      socials:
        additionalProperties:
          $ref: '#/definitions/dto.Social'
        type: object
      swapFeeBps:
        type: integer
      symbol:
        type: string
      totalSupply:
        type: string
      vestingAllocBps:
        type: integer
      website:
        type: string
    type: object
  dto.Memeception:
    properties:
      ama:
        type: boolean
      collectedETH:
        type: string
      contractAddress:
        type: string
      enabled:
        type: boolean
      meme:
        $ref: '#/definitions/dto.MemeCommon'
      memeID:
        type: integer
      startAt:
        type: integer
      status:
        type: integer
      targetETH:
        type: string
      updatedAtEpoch:
        type: integer
    type: object
  dto.MemeceptionCommon:
    properties:
      ama:
        type: boolean
      collectedETH:
        type: string
      contractAddress:
        type: string
      enabled:
        type: boolean
      memeID:
        type: integer
      startAt:
        type: integer
      status:
        type: integer
      targetETH:
        type: string
      updatedAtEpoch:
        type: integer
    type: object
  dto.MemeceptionDetailResp:
    properties:
      meme:
        $ref: '#/definitions/dto.MemeDetail'
      price:
        type: integer
    type: object
  dto.MemeceptionsResp:
    properties:
      live:
        items:
          $ref: '#/definitions/dto.MemeceptionCommon'
        type: array
      past:
        items:
          $ref: '#/definitions/dto.MemeceptionCommon'
        type: array
      upcoming:
        items:
          $ref: '#/definitions/dto.MemeceptionCommon'
        type: array
    type: object
  dto.Social:
    properties:
      displayName:
        type: string
      photoUrl:
        type: string
      provider:
        type: string
      url:
        type: string
      username:
        type: string
    type: object
  dto.Swap:
    properties:
      amount0:
        type: string
      amount1:
        type: string
      amountUSD:
        type: string
      buy:
        type: boolean
      priceETH:
        type: string
      priceUSD:
        type: string
      swapAt:
        type: integer
      token1IsMeme:
        type: boolean
      txHash:
        type: string
      walletAddress:
        type: string
    type: object
  dto.SwapHistoryByAddressResp:
    properties:
      swaps:
        items:
          $ref: '#/definitions/dto.Swap'
        type: array
    type: object
  dto.Transaction:
    properties:
      amountETH:
        type: string
      amountMeme:
        type: string
      epoch:
        type: integer
      memeId:
        type: string
      txHash:
        type: string
      txType:
        type: string
      walletAddress:
        type: string
    type: object
  util.GeneralError:
    properties:
      code:
        description: HTTP error code, or custom error code
        type: integer
      errors:
        description: List of error send server 2 server
        items:
          type: string
        type: array
      string:
        description: Friendly error message
        type: string
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This Swagger docs for membots-be.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: membots-be API
  version: "1.0"
paths:
  /api/v1/meme:
    get:
      consumes:
      - application/json
      description: Get memeception by meme address
      parameters:
      - description: 'memeAddress to query, default is '
        in: query
        name: symbol
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.MemeceptionDetailResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.GeneralError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/util.GeneralError'
      summary: Get memeception by meme address
      tags:
      - memeception
  /api/v1/memeceptions:
    get:
      consumes:
      - application/json
      description: Get memeceptions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.MemeceptionsResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.GeneralError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/util.GeneralError'
      summary: Get memeceptions
      tags:
      - memeception
  /api/v1/truglymeme/launchpad:
    get:
      consumes:
      - application/json
      description: Get launchpad history by address
      parameters:
      - description: 'memeAddress to query, default is '
        in: query
        name: memeAddress
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.LaunchpadInfoResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.GeneralError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/util.GeneralError'
      summary: Get launchpad history by address
      tags:
      - launchpad
  /api/v1/truglymeme/swaps:
    get:
      consumes:
      - application/json
      description: Get swaps history by memeId
      parameters:
      - description: 'memeId to query, default is '
        in: query
        name: memeId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.SwapHistoryByAddressResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.GeneralError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/util.GeneralError'
      summary: Get swaps history by memeId
      tags:
      - swap
swagger: "2.0"
