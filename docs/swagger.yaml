definitions:
  dto.ATPostBackRequest:
    properties:
      browser:
        description: Trình duyệt sử dụng
        type: string
      campaign_id:
        description: ID của campaign trên hệ thống
        type: string
      click_time:
        description: Thời gian phát sinh click
        type: string
      conversion_platform:
        description: Platform sử dụng
        type: string
      customer_type:
        description: Thuộc tính của khách hàng phụ thuộc theo campaigns
        type: string
      ip:
        description: IP phát sinh đơn hàng
        type: string
      is_confirmed:
        description: 'Đơn hàng khóa data và được thanh toán: 0: chưa đối soát, 1:
          đã đối soát'
        type: string
      order_id:
        description: Mã đơn hàng hiển thị trên trang pub
        type: string
      product_category:
        description: Group commission của sản phẩm
        type: string
      product_id:
        description: Mã sản phẩm
        type: string
      product_price:
        description: Giá của một sản phẩm
        type: string
      publisher_login_name:
        type: string
      quantity:
        description: Số lượng sản phẩm
        type: string
      referrer:
        description: click_referrer
        type: string
      reward:
        description: Hoa hồng nhận được
        type: string
      sales_time:
        description: Thời gian phát sinh của đơn hàng
        type: string
      status:
        description: 'Status của đơn hàng gồm 3 giá trị: 0: new, 1: approved, 2: rejected'
        type: string
      transaction_id:
        description: Mã unique trên hệ thống AccessTrade
        type: string
      utm_campaign:
        description: Thông tin tùy biến pub truyền vào url trong param utm_campaign
        type: string
      utm_content:
        description: Thông tin tùy biến pub truyền vào url trong param utm_content
        type: string
      utm_medium:
        description: Thông tin tùy biến pub truyền vào url trong param utm_medium
        type: string
      utm_source:
        description: Thông tin tùy biến pub truyền vào url trong param utm_source
        type: string
    type: object
  dto.ATPostBackResponse:
    properties:
      order_id:
        type: string
      success:
        type: boolean
    type: object
  dto.AffCampaignAppDto:
    properties:
      accesstrade_id:
        type: string
      brand:
        $ref: '#/definitions/dto.BrandDto'
      brand_id:
        type: integer
      category_id:
        type: integer
      created_at:
        type: string
      end_time:
        type: string
      id:
        type: integer
      name:
        type: string
      start_time:
        type: string
      stella_description: {}
      stella_max_com:
        type: string
      stella_status:
        type: string
      thumbnail:
        type: string
      updated_at:
        type: string
      url:
        type: string
    type: object
  dto.AffCampaignAppDtoResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/dto.AffCampaignAppDto'
        type: array
      next_page:
        type: integer
      page:
        type: integer
      size:
        type: integer
      total:
        type: integer
    type: object
  dto.AffCampaignDto:
    properties:
      accesstrade_id:
        type: string
      active_status:
        type: integer
      approval:
        type: string
      category:
        type: string
      cookie_duration:
        type: integer
      cookie_policy:
        type: string
      created_at:
        type: string
      description:
        $ref: '#/definitions/dto.CampaignDescriptionDto'
      id:
        type: integer
      logo:
        type: string
      max_com:
        type: string
      merchant:
        type: string
      scope:
        type: string
      status:
        type: integer
      stella_info:
        $ref: '#/definitions/dto.StellaInfoDto'
      sub_category:
        type: string
      type:
        type: integer
      updated_at:
        type: string
    type: object
  dto.AffCampaignDtoResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/dto.AffCampaignDto'
        type: array
      next_page:
        type: integer
      page:
        type: integer
      size:
        type: integer
      total:
        type: integer
    type: object
  dto.BrandDto:
    properties:
      cover_photo:
        type: string
      id:
        type: integer
      logo:
        type: string
      name:
        type: string
    type: object
  dto.CampaignDescriptionDto:
    properties:
      action_point:
        type: string
      campaign_id:
        type: integer
      commission_policy:
        type: string
      cookie_policy:
        type: string
      created_at:
        type: string
      id:
        type: integer
      introduction:
        type: string
      other_notice:
        type: string
      rejected_reason:
        type: string
      traffic_building_policy:
        type: string
      updated_at:
        type: string
    type: object
  dto.CategoryDto:
    properties:
      id:
        type: integer
      logo:
        type: string
      name:
        type: string
      total_coupon:
        type: integer
    type: object
  dto.CreateLinkPayload:
    properties:
      campaign_id:
        type: integer
      original_url:
        type: string
      shorten_link:
        type: boolean
    type: object
  dto.CreateLinkResponse:
    properties:
      aff_link:
        type: string
      brand_new:
        type: boolean
      campaign_id:
        type: integer
      original_url:
        type: string
      short_link:
        type: string
    type: object
  dto.RewardClaimDto:
    properties:
      amount:
        type: number
      created_at:
        type: string
      id:
        type: integer
      shipping_request_id:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  dto.RewardClaimResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/dto.RewardClaimDto'
        type: array
      next_page:
        type: integer
      page:
        type: integer
      size:
        type: integer
      total:
        type: integer
    type: object
  dto.RewardDto:
    properties:
      accesstrade_order_id:
        type: string
      amount:
        type: number
      created_at:
        type: string
      ended_at:
        type: string
      id:
        type: integer
      rewarded_amount:
        type: number
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  dto.RewardResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/dto.RewardDto'
        type: array
      next_page:
        type: integer
      page:
        type: integer
      size:
        type: integer
      total:
        type: integer
    type: object
  dto.RewardSummary:
    properties:
      claimable_reward:
        type: number
      pending_reward_amount:
        type: number
      pending_reward_order:
        type: integer
      reward_in_day:
        type: number
    type: object
  dto.StellaInfoDto:
    properties:
      brand:
        $ref: '#/definitions/dto.BrandDto'
      brand_id:
        type: integer
      category:
        $ref: '#/definitions/dto.CategoryDto'
      category_id:
        type: integer
      end_time:
        type: string
      name:
        type: string
      start_time:
        type: string
      stella_description: {}
      stella_max_com:
        type: string
      stella_status:
        type: string
      thumbnail:
        type: string
      url:
        type: string
    type: object
  types.RedeemRequestPayload:
    properties:
      redeemCode:
        description: a unique text to redeem reward
        type: string
      walletAddress:
        description: valid wallet address to send reward to
        type: string
    required:
    - redeemCode
    - walletAddress
    type: object
  types.RedeemRewardResponse:
    properties:
      deadline:
        type: integer
      holderAddress:
        type: string
      signature:
        type: string
      walletAddress:
        type: string
    type: object
  util.GeneralError:
    properties:
      code:
        description: HTTP error code, or custom error code
        type: integer
      errors:
        description: List of error send server 2 server
        items:
          type: string
        type: array
      string:
        description: Friendly error message
        type: string
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: Use for authorization during server to server calls
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Affiliate System API
  version: "1.0"
paths:
  /api/v1/app/aff-campaign:
    get:
      consumes:
      - application/json
      description: Get list of all aff campaign
      parameters:
      - description: page to query, default is 1
        in: query
        name: page
        type: string
      - description: size to query, default is 10
        in: query
        name: size
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.AffCampaignAppDtoResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.GeneralError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/util.GeneralError'
      summary: Get list of all aff campaign
      tags:
      - app
  /api/v1/app/aff-campaign/{id}:
    get:
      consumes:
      - application/json
      description: Get aff campaign by id
      parameters:
      - description: id to query
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.AffCampaignAppDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.GeneralError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/util.GeneralError'
      summary: Get aff campaign by id
      tags:
      - app
  /api/v1/campaign/link:
    post:
      consumes:
      - application/json
      description: Request create a new campaign link or pick the active old one
      parameters:
      - description: Request create link payload, required
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/dto.CreateLinkPayload'
      produces:
      - application/json
      responses:
        "200":
          description: when success, return the created link for this request campaign
          schema:
            $ref: '#/definitions/dto.CreateLinkResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.GeneralError'
        "424":
          description: Failed Dependency
          schema:
            $ref: '#/definitions/util.GeneralError'
      security:
      - ApiKeyAuth: []
      summary: PostGenerateAffLink
      tags:
      - redeem
  /api/v1/console/aff-campaign:
    get:
      description: Get list aff campaign
      parameters:
      - description: by to query, default is all
        in: query
        name: stella_status
        type: string
      - description: order to query, default is desc
        in: query
        name: order
        type: string
      - description: page to query, default is 1
        in: query
        name: page
        type: string
      - description: size to query, default is 10
        in: query
        name: size
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.AffCampaignDtoResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.GeneralError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/util.GeneralError'
      security:
      - ApiKeyAuth: []
      summary: Get list aff campaign
      tags:
      - console
  /api/v1/console/aff-campaign/{id}:
    get:
      description: Get campaign by id
      parameters:
      - description: id to query
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.AffCampaignDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.GeneralError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/util.GeneralError'
      security:
      - ApiKeyAuth: []
      summary: Get campaign by id
      tags:
      - console
    put:
      consumes:
      - application/json
      description: update campaign info
      parameters:
      - description: Campaign info to update, required
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/dto.AffCampaignAppDto'
      - description: id to query
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.AffCampaignAppDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.GeneralError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/util.GeneralError'
      security:
      - ApiKeyAuth: []
      summary: update campaign info
      tags:
      - console
  /api/v1/order/post-back:
    post:
      consumes:
      - application/json
      description: A callback to receive order from AccessTrade
      parameters:
      - description: Request create link payload, required
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/dto.ATPostBackRequest'
      produces:
      - application/json
      responses:
        "200":
          description: when success, return the modified order for this post back
          schema:
            $ref: '#/definitions/dto.ATPostBackResponse'
        "417":
          description: Expectation Failed
          schema:
            $ref: '#/definitions/util.GeneralError'
        "424":
          description: Failed Dependency
          schema:
            $ref: '#/definitions/util.GeneralError'
      summary: PostBackOrderHandle
      tags:
      - redeem
  /api/v1/redeem/request:
    post:
      consumes:
      - application/json
      description: Send cashback to customer wallet by redeem code
      parameters:
      - description: Redeem payload, required
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/types.RedeemRequestPayload'
      produces:
      - application/json
      responses:
        "200":
          description: when redeem code is available, only valid if not claimed yet
          schema:
            $ref: '#/definitions/types.RedeemRewardResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.GeneralError'
        "424":
          description: Failed Dependency
          schema:
            $ref: '#/definitions/util.GeneralError'
      security:
      - ApiKeyAuth: []
      summary: PostRequestRedeem
      tags:
      - redeem
  /api/v1/rewards:
    get:
      consumes:
      - application/json
      description: Get all rewards
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.RewardResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.GeneralError'
        "424":
          description: Failed Dependency
          schema:
            $ref: '#/definitions/util.GeneralError'
      summary: Get all rewards
      tags:
      - reward
  /api/v1/rewards/by-order-id:
    get:
      consumes:
      - application/json
      description: Get reward by affiliate order
      parameters:
      - description: affiliate order id to query
        in: query
        name: affOrderId
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.RewardDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.GeneralError'
        "424":
          description: Failed Dependency
          schema:
            $ref: '#/definitions/util.GeneralError'
      summary: PostRequestRedeem Get reward by affiliate order
      tags:
      - reward
  /api/v1/rewards/claims:
    get:
      consumes:
      - application/json
      description: Get reward history records
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.RewardClaimResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.GeneralError'
        "424":
          description: Failed Dependency
          schema:
            $ref: '#/definitions/util.GeneralError'
      summary: Get reward history records
      tags:
      - reward
    post:
      consumes:
      - application/json
      description: Claim reward of all orders
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.RewardSummary'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.GeneralError'
        "424":
          description: Failed Dependency
          schema:
            $ref: '#/definitions/util.GeneralError'
      summary: Claim reward of all orders
      tags:
      - reward
  /api/v1/rewards/summary:
    get:
      consumes:
      - application/json
      description: Get reward summary of an account
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.RewardSummary'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.GeneralError'
        "424":
          description: Failed Dependency
          schema:
            $ref: '#/definitions/util.GeneralError'
      summary: Get reward summary of an account
      tags:
      - reward
securityDefinitions:
  ApiKeyAuth:
    description: Use for authorization of reward creator
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
